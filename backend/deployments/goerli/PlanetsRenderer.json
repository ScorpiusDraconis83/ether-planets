{
  "address": "0xeb74c48BB0Fb37C2b22a6E278d2F7b6Fa5Cc8d89",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ethfsFileStorageAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_scriptyBuilderAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_scriptyStorageAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_etherPlanetsScriptName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_vars",
          "type": "bytes"
        }
      ],
      "name": "buildAnimationURI",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "html",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "etherPlanetsScriptName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethfsFileStorageAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scriptyBuilderAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scriptyStorageAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7757b9d072151ce933e21c29fef4a6e7368e15269493ecafe77df75dbc0f1a03",
  "receipt": {
    "to": null,
    "from": "0xCC78016816633528Dd4918746D7F016563Ce27FA",
    "contractAddress": "0xeb74c48BB0Fb37C2b22a6E278d2F7b6Fa5Cc8d89",
    "transactionIndex": 114,
    "gasUsed": "1112790",
    "logsBloom": "0x
    "blockHash": "0x730547d1f5856d9f23687a4d11f036c2d12f69b804fd62517e939cca2d15aeb1",
    "transactionHash": "0x7757b9d072151ce933e21c29fef4a6e7368e15269493ecafe77df75dbc0f1a03",
    "logs": [],
    "blockNumber": 8811169,
    "cumulativeGasUsed": "12758471",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x70a78d91A434C1073D47b2deBe31C184aA8CA9Fa",
    "0xc9AB9815d4D5461F3b53Ebd857b6582E82A45C49",
    "0x730B0ADaaD15B0551928bAE7011F2C1F2A9CA20C",
    "etherplanets-2023-04-11T09:09:18.436Z"
  ],
  "numDeployments": 2,
  "solcInputHash": "31211ed97ed7915b9951f767632b3ad2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethfsFileStorageAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_scriptyBuilderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_scriptyStorageAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_etherPlanetsScriptName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vars\",\"type\":\"bytes\"}],\"name\":\"buildAnimationURI\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"html\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etherPlanetsScriptName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethfsFileStorageAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scriptyBuilderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scriptyStorageAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buildAnimationURI(bytes)\":{\"details\":\"I opted for the lazy dev approach and let scripty calculate the required buffersize      This could be calculated and passed to the contract at any point prior to its use      in `getHTMLWrappedURLSafe`\",\"params\":{\"_vars\":\"- Variables to be injected\"},\"returns\":{\"html\":\"- as bytes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buildAnimationURI(bytes)\":{\"notice\":\"Use Scripty to generate the final html\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PlanetsRenderer.sol\":\"PlanetsRenderer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PlanetsRenderer.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"./interfaces/IPlanetsRenderer.sol\\\";\\nimport \\\"./interfaces/IPlanets.sol\\\";\\n\\ncontract PlanetsRenderer is IPlanetsRenderer {\\n  address public immutable ethfsFileStorageAddress;\\n  address public immutable scriptyBuilderAddress;\\n  address public immutable scriptyStorageAddress;\\n  string public etherPlanetsScriptName;\\n\\n  constructor(\\n    address _ethfsFileStorageAddress,\\n    address _scriptyBuilderAddress,\\n    address _scriptyStorageAddress,\\n    string memory _etherPlanetsScriptName\\n  ) {\\n    ethfsFileStorageAddress = _ethfsFileStorageAddress;\\n    scriptyBuilderAddress = _scriptyBuilderAddress;\\n    scriptyStorageAddress = _scriptyStorageAddress;\\n    etherPlanetsScriptName = _etherPlanetsScriptName;\\n  }\\n\\n  /**\\n   * @notice Use Scripty to generate the final html\\n   * @dev I opted for the lazy dev approach and let scripty calculate the required buffersize\\n   *      This could be calculated and passed to the contract at any point prior to its use\\n   *      in `getHTMLWrappedURLSafe`\\n   * @param _vars - Variables to be injected\\n   * @return html - as bytes\\n   */\\n  function buildAnimationURI(bytes calldata _vars) external view returns (bytes memory html) {\\n    // To build the html I use Scripty to manage all the annoying tagging and html construction\\n    // A combination of EthFS and Scripty is used for storage and this array stores the required\\n    // code data\\n    WrappedScriptRequest[] memory requests = new WrappedScriptRequest[](5);\\n\\n    // Step 1.\\n    // - create custom content blocks that have no wrapper\\n    // - we do this to easily inject css and dom elements\\n    // - double urlencoded\\n    // - first block is css + some JS\\n    // - second block is coaster settings [biome + speed]\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L648\\n    // [double urlencoded data]\\n\\n    requests[0].wrapType = 4;\\n    requests[0]\\n      .scriptContent = \\\"%253Cstyle%253E%250A%2520%2520body%252C%250A%2520%2520html%2520%257B%250A%2520%2520%2520%2520overflow%253A%2520hidden%253B%250A%2520%2520%2520%2520margin%253A%25200%253B%250A%2520%2520%2520%2520width%253A%2520100%2525%253B%250A%2520%2520%2520%2520height%253A%2520100%2525%253B%250A%2520%2520%257D%250A%2520%2520body%2520%257B%250A%2520%2520%2520%2520background-color%253A%2520black%253B%250A%2520%2520%257D%250A%253C%252Fstyle%253E\\\";\\n\\n    // Step 2.\\n    // - wrap the JS variables in <script>\\n    // - no name is needed as we are injected the code rather than\\n    //   pulling it from a contract (scriptyStorage/EthFS)\\n    // - wrapType 1 w/ script content\\n    //\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L638\\n    // <script src=\\\"data:text/javascript;base64,[vars]\\\"></script>\\n\\n    requests[1].name = \\\"\\\";\\n    requests[1].wrapType = 1;\\n    requests[1].scriptContent = _vars;\\n\\n    // Step 3.\\n    // - pull the gzipped p5 lib from EthFS\\n    // - wrapType 2 will handle the gzip script wrappers\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L642\\n    // <script type=\\\"text/javascript+gzip\\\" src=\\\"data:text/javascript;base64,[p5-v1.5.0.min.js.gz]\\\"></script>\\n\\n    requests[2].name = \\\"p5-v1.5.0.min.js.gz\\\";\\n    requests[2].wrapType = 2;\\n    requests[2].contractAddress = ethfsFileStorageAddress;\\n\\n    // Step 4.\\n    // - pull the coaster code from scriptyStorage\\n    //   I could have stored on EthFS, but wanted to show that pulling from\\n    //   another contract is possible.\\n    // - wrapType 2 will handle the gzip script wrappers\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L642\\n    // <script type=\\\"text/javascript+gzip\\\" src=\\\"data:text/javascript;base64,[cryptoCoaster.min.js.gz]\\\"></script>\\n\\n    requests[3].name = etherPlanetsScriptName;\\n    requests[3].wrapType = 2;\\n    requests[3].contractAddress = scriptyStorageAddress;\\n\\n    // Step 4.\\n    // - pull the gunzip handler from EthFS\\n    // - wrapType 1 will handle the script tags\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L638\\n    // <script src=\\\"data:text/javascript;base64,[gunzipScripts-0.0.1.js]\\\"></script>\\n\\n    requests[4].name = \\\"gunzipScripts-0.0.1.js\\\";\\n    requests[4].wrapType = 1;\\n    requests[4].contractAddress = ethfsFileStorageAddress;\\n\\n    IScriptyBuilder IScriptyBuilder_ = IScriptyBuilder(scriptyBuilderAddress);\\n    uint256 bufferSize = IScriptyBuilder_.getBufferSizeForURLSafeHTMLWrapped(requests);\\n    return IScriptyBuilder_.getHTMLWrappedURLSafe(requests, bufferSize);\\n  }\\n}\\n\",\"keccak256\":\"0xe9ff4989ad80a02f87fd77b591039a39c21083620c84d35438a877189bde6381\",\"license\":\"MIT\"},\"contracts/interfaces/IPlanets.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nenum PlanetType {\\n  GAS,\\n  SOLID\\n}\\n\\nstruct Settings {\\n  uint256 seed;\\n  uint256 planetSize;\\n  bool hasRings;\\n  uint256 numMoons;\\n  PlanetType planetType;\\n  uint256 hue;\\n  bool hasWater;\\n  bytes[7] vars;\\n}\\n\",\"keccak256\":\"0xde247baaac85eaf9d393d7e8d22c19eb9eb61272cc00c9b01577b2dd97298685\",\"license\":\"MIT\"},\"contracts/interfaces/IPlanetsRenderer.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"scripty.sol/contracts/scripty/IScriptyBuilder.sol\\\";\\nimport \\\"./IPlanets.sol\\\";\\n\\ninterface IPlanetsRenderer {\\n  function buildAnimationURI(bytes calldata vars) external view returns (bytes memory html);\\n}\\n\",\"keccak256\":\"0xdfd18775cc933e1eaaa7a19572e523e680b91d4bac972eb4295b3fa7ac217138\",\"license\":\"MIT\"},\"scripty.sol/contracts/scripty/IScriptyBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\n///////////////////////////////////////////////////////////\\n// \\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2557 //\\n// \\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u255a\\u2550\\u2550\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u255a\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2554\\u255d //\\n// \\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u255a\\u2550\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u255a\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2591 //\\n// \\u2591\\u255a\\u2550\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u2591 //\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591 //\\n// \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591 //\\n///////////////////////////////////////////////////////////\\n\\n// =============================================================\\n//                            STRUCTS\\n// =============================================================\\n\\nstruct WrappedScriptRequest {\\n    string name;\\n    address contractAddress;\\n    bytes contractData;\\n    uint8 wrapType;\\n    bytes wrapPrefix;\\n    bytes wrapSuffix;\\n    bytes scriptContent;\\n}\\n\\nstruct InlineScriptRequest {\\n    string name;\\n    address contractAddress;\\n    bytes contractData;\\n    bytes scriptContent;\\n}\\n\\ninterface IScriptyBuilder {\\n\\n    // =============================================================\\n    //                            ERRORS\\n    // =============================================================\\n\\n    /**\\n     * @notice Error for, Invalid length of requests\\n     */\\n    error InvalidRequestsLength();\\n\\n    // =============================================================\\n    //                      RAW HTML GETTERS\\n    // =============================================================\\n\\n    /**\\n     * @notice Get requested scripts housed in <body> with custom wrappers\\n     * @dev Your requested scripts are returned in the following format:\\n     *      <html>\\n     *          <head></head>\\n     *          <body style='margin:0;'>\\n     *              [wrapPrefix[0]]{request[0]}[wrapSuffix[0]]\\n     *              [wrapPrefix[1]]{request[1]}[wrapSuffix[1]]\\n     *              ...\\n     *              [wrapPrefix[n]]{request[n]}[wrapSuffix[n]]\\n     *          </body>\\n     *      </html>\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full html wrapped scripts\\n     */\\n    function getHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    /**\\n     * @notice Get requested scripts housed in URL Safe wrappers\\n     * @dev Any wrapper type 0 scripts are converted to base64 and wrapped\\n     *      with <script src=\\\"data:text/javascript;base64,[SCRIPT]\\\"></script>\\n     *\\n     *      [WARNING]: Large non-base64 libraries that need base64 encoding\\n     *      carry a high risk of causing a gas out. Highly advised to use\\n     *      base64 encoded scripts where possible\\n     *\\n     *      Your requested scripts are returned in the following format:\\n     *      <html>\\n     *          <head></head>\\n     *          <body style='margin:0;'>\\n     *              [wrapPrefix[0]]{request[0]}[wrapSuffix[0]]\\n     *              [wrapPrefix[1]]{request[1]}[wrapSuffix[1]]\\n     *              ...\\n     *              [wrapPrefix[n]]{request[n]}[wrapSuffix[n]]\\n     *          </body>\\n     *      </html>\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full URL Safe wrapped scripts\\n     */\\n    function getHTMLWrappedURLSafe(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    /**\\n     * @notice Get requested scripts housed in <body> all wrapped in <script></script>\\n     * @dev Your requested scripts are returned in the following format:\\n     *      <html>\\n     *          <head></head>\\n     *          <body style='margin:0;'>\\n     *              <script>\\n     *                  {request[0]}\\n     *                  {request[1]}\\n     *                  ...\\n     *                  {request[n]}\\n     *              </script>\\n     *          </body>\\n     *      </html>\\n     * @param requests - Array of InlineScriptRequest\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full html wrapped scripts\\n     */\\n    function getHTMLInline(\\n        InlineScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    // =============================================================\\n    //                      ENCODED HTML GETTERS\\n    // =============================================================\\n\\n    /**\\n     * @notice Get {getHTMLWrapped} and base64 encode it\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full html wrapped scripts, base64 encoded\\n     */\\n    function getEncodedHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    /**\\n     * @notice Get {getHTMLInline} and base64 encode it\\n     * @param requests - Array of InlineScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full html wrapped scripts, base64 encoded\\n     */\\n    function getEncodedHTMLInline(\\n        InlineScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    // =============================================================\\n    //                      STRING UTILITIES\\n    // =============================================================\\n\\n    /**\\n     * @notice Convert {getHTMLWrapped} output to a string\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return {getHTMLWrapped} as a string\\n     */\\n    function getHTMLWrappedString(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (string memory);\\n\\n    /**\\n     * @notice Convert {getHTMLInline} output to a string\\n     * @param requests - Array of InlineScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return {getHTMLInline} as a string\\n     */\\n    function getHTMLInlineString(\\n        InlineScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (string memory);\\n\\n    /**\\n     * @notice Convert {getEncodedHTMLWrapped} output to a string\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     *                     before encoding.\\n     * @return {getEncodedHTMLWrapped} as a string\\n     */\\n    function getEncodedHTMLWrappedString(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (string memory);\\n\\n    /**\\n     * @notice Convert {getEncodedHTMLInline} output to a string\\n     * @param requests - Array of InlineScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     *                     before encoding.\\n     * @return {getEncodedHTMLInline} as a string\\n     */\\n    function getEncodedHTMLInlineString(\\n        InlineScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (string memory);\\n\\n    // =============================================================\\n    //                      OFF-CHAIN UTILITIES\\n    // =============================================================\\n\\n    /**\\n     * @notice Get the buffer size of a single inline requested code\\n     * @param request - InlineScriptRequest data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getInlineScriptSize(InlineScriptRequest memory request)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of a single wrapped requested code\\n     * @param request - WrappedScriptRequest data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getWrappedScriptSize(WrappedScriptRequest memory request)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of a single wrapped requested code\\n     * @dev If the script is of wrapper type 0, we get buffer size for\\n     *      base64 encoded version.\\n     * @param request - WrappedScriptRequest data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getURLSafeWrappedScriptSize(WrappedScriptRequest memory request)\\n    external\\n    view\\n    returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of an array of html wrapped inline scripts\\n     * @param requests - InlineScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForHTMLInline(InlineScriptRequest[] calldata requests)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of an array of html wrapped, wrapped scripts\\n     * @param requests - WrappedScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of an array of URL safe html wrapped scripts\\n     * @param requests - WrappedScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForURLSafeHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests\\n    ) external view returns (uint256);\\n    \\n    /**\\n     * @notice Get the buffer size for encoded HTML inline scripts\\n     * @param requests - InlineScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForEncodedHTMLInline(\\n        InlineScriptRequest[] calldata requests\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size for encoded HTML inline scripts\\n     * @param requests - InlineScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForEncodedHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x2fff62123a05638ef5b190acdd1b3e76d960aa4e005cf2368f1b58052636f9c6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162001873380380620018738339818101604052810190620000379190620002e7565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508060009081620000e49190620005c3565b5050505050620006aa565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001308262000103565b9050919050565b620001428162000123565b81146200014e57600080fd5b50565b600081519050620001628162000137565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001bd8262000172565b810181811067ffffffffffffffff82111715620001df57620001de62000183565b5b80604052505050565b6000620001f4620000ef565b9050620002028282620001b2565b919050565b600067ffffffffffffffff82111562000225576200022462000183565b5b620002308262000172565b9050602081019050919050565b60005b838110156200025d57808201518184015260208101905062000240565b60008484015250505050565b6000620002806200027a8462000207565b620001e8565b9050828152602081018484840111156200029f576200029e6200016d565b5b620002ac8482856200023d565b509392505050565b600082601f830112620002cc57620002cb62000168565b5b8151620002de84826020860162000269565b91505092915050565b60008060008060808587031215620003045762000303620000f9565b5b6000620003148782880162000151565b9450506020620003278782880162000151565b93505060406200033a8782880162000151565b925050606085015167ffffffffffffffff8111156200035e576200035d620000fe565b5b6200036c87828801620002b4565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003cb57607f821691505b602082108103620003e157620003e062000383565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200044b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200040c565b6200045786836200040c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004a46200049e62000498846200046f565b62000479565b6200046f565b9050919050565b6000819050919050565b620004c08362000483565b620004d8620004cf82620004ab565b84845462000419565b825550505050565b600090565b620004ef620004e0565b620004fc818484620004b5565b505050565b5b81811015620005245762000518600082620004e5565b60018101905062000502565b5050565b601f82111562000573576200053d81620003e7565b6200054884620003fc565b8101602085101562000558578190505b620005706200056785620003fc565b83018262000501565b50505b505050565b600082821c905092915050565b6000620005986000198460080262000578565b1980831691505092915050565b6000620005b3838362000585565b9150826002028217905092915050565b620005ce8262000378565b67ffffffffffffffff811115620005ea57620005e962000183565b5b620005f68254620003b2565b6200060382828562000528565b600060209050601f8311600181146200063b576000841562000626578287015190505b620006328582620005a5565b865550620006a2565b601f1984166200064b86620003e7565b60005b8281101562000675578489015182556001820191506020850194506020810190506200064e565b8683101562000695578489015162000691601f89168262000585565b8355505b6001600288020188555050505b505050505050565b60805160a05160c05161117d620006f660003960008181610194015261051f01526000818161068e01526107bb0152600081816103d00152818161061901526107df015261117d6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806387635d2e1461005c578063a9cb35ae1461007a578063bf471ba714610098578063e3b71f87146100c8578063f7da3762146100e6575b600080fd5b610064610104565b60405161007191906108e7565b60405180910390f35b610082610192565b60405161008f919061094a565b60405180910390f35b6100b260048036038101906100ad91906109de565b6101b6565b6040516100bf9190610a80565b60405180910390f35b6100d06107b9565b6040516100dd919061094a565b60405180910390f35b6100ee6107dd565b6040516100fb919061094a565b60405180910390f35b6000805461011190610ad1565b80601f016020809104026020016040519081016040528092919081815260200182805461013d90610ad1565b801561018a5780601f1061015f5761010080835404028352916020019161018a565b820191906000526020600020905b81548152906001019060200180831161016d57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606000600567ffffffffffffffff8111156101d5576101d4610b02565b5b60405190808252806020026020018201604052801561020e57816020015b6101fb610801565b8152602001906001900390816101f35790505b50905060048160008151811061022757610226610b31565b5b60200260200101516060019060ff16908160ff1681525050604051806101e001604052806101af8152602001610f996101af91398160008151811061026f5761026e610b31565b5b602002602001015160c0018190525060405180602001604052806000815250816001815181106102a2576102a1610b31565b5b6020026020010151600001819052506001816001815181106102c7576102c6610b31565b5b60200260200101516060019060ff16908160ff168152505083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160018151811061033857610337610b31565b5b602002602001015160c001819052506040518060400160405280601381526020017f70352d76312e352e302e6d696e2e6a732e677a000000000000000000000000008152508160028151811061039157610390610b31565b5b6020026020010151600001819052506002816002815181106103b6576103b5610b31565b5b60200260200101516060019060ff16908160ff16815250507f00000000000000000000000000000000000000000000000000000000000000008160028151811061040357610402610b31565b5b60200260200101516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000805461044e90610ad1565b80601f016020809104026020016040519081016040528092919081815260200182805461047a90610ad1565b80156104c75780601f1061049c576101008083540402835291602001916104c7565b820191906000526020600020905b8154815290600101906020018083116104aa57829003601f168201915b5050505050816003815181106104e0576104df610b31565b5b60200260200101516000018190525060028160038151811061050557610504610b31565b5b60200260200101516060019060ff16908160ff16815250507f00000000000000000000000000000000000000000000000000000000000000008160038151811061055257610551610b31565b5b60200260200101516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506040518060400160405280601681526020017f67756e7a6970536372697074732d302e302e312e6a7300000000000000000000815250816004815181106105da576105d9610b31565b5b6020026020010151600001819052506001816004815181106105ff576105fe610b31565b5b60200260200101516060019060ff16908160ff16815250507f00000000000000000000000000000000000000000000000000000000000000008160048151811061064c5761064b610b31565b5b60200260200101516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060007f0000000000000000000000000000000000000000000000000000000000000000905060008173ffffffffffffffffffffffffffffffffffffffff166368e1644a846040518263ffffffff1660e01b81526004016106ea9190610d99565b602060405180830381865afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190610df1565b90508173ffffffffffffffffffffffffffffffffffffffff1663b4f7d41e84836040518363ffffffff1660e01b8152600401610768929190610e2d565b600060405180830381865afa158015610785573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107ae9190610f4f565b935050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060e0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600060ff1681526020016060815260200160608152602001606081525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610891578082015181840152602081019050610876565b60008484015250505050565b6000601f19601f8301169050919050565b60006108b982610857565b6108c38185610862565b93506108d3818560208601610873565b6108dc8161089d565b840191505092915050565b6000602082019050818103600083015261090181846108ae565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061093482610909565b9050919050565b61094481610929565b82525050565b600060208201905061095f600083018461093b565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261099e5761099d610979565b5b8235905067ffffffffffffffff8111156109bb576109ba61097e565b5b6020830191508360018202830111156109d7576109d6610983565b5b9250929050565b600080602083850312156109f5576109f461096f565b5b600083013567ffffffffffffffff811115610a1357610a12610974565b5b610a1f85828601610988565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000610a5282610a2b565b610a5c8185610a36565b9350610a6c818560208601610873565b610a758161089d565b840191505092915050565b60006020820190508181036000830152610a9a8184610a47565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ae957607f821691505b602082108103610afc57610afb610aa2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610ba882610857565b610bb28185610b8c565b9350610bc2818560208601610873565b610bcb8161089d565b840191505092915050565b610bdf81610929565b82525050565b600082825260208201905092915050565b6000610c0182610a2b565b610c0b8185610be5565b9350610c1b818560208601610873565b610c248161089d565b840191505092915050565b600060ff82169050919050565b610c4581610c2f565b82525050565b600060e0830160008301518482036000860152610c688282610b9d565b9150506020830151610c7d6020860182610bd6565b5060408301518482036040860152610c958282610bf6565b9150506060830151610caa6060860182610c3c565b5060808301518482036080860152610cc28282610bf6565b91505060a083015184820360a0860152610cdc8282610bf6565b91505060c083015184820360c0860152610cf68282610bf6565b9150508091505092915050565b6000610d0f8383610c4b565b905092915050565b6000602082019050919050565b6000610d2f82610b60565b610d398185610b6b565b935083602082028501610d4b85610b7c565b8060005b85811015610d875784840389528151610d688582610d03565b9450610d7383610d17565b925060208a01995050600181019050610d4f565b50829750879550505050505092915050565b60006020820190508181036000830152610db38184610d24565b905092915050565b6000819050919050565b610dce81610dbb565b8114610dd957600080fd5b50565b600081519050610deb81610dc5565b92915050565b600060208284031215610e0757610e0661096f565b5b6000610e1584828501610ddc565b91505092915050565b610e2781610dbb565b82525050565b60006040820190508181036000830152610e478185610d24565b9050610e566020830184610e1e565b9392505050565b600080fd5b610e6b8261089d565b810181811067ffffffffffffffff82111715610e8a57610e89610b02565b5b80604052505050565b6000610e9d610965565b9050610ea98282610e62565b919050565b600067ffffffffffffffff821115610ec957610ec8610b02565b5b610ed28261089d565b9050602081019050919050565b6000610ef2610eed84610eae565b610e93565b905082815260208101848484011115610f0e57610f0d610e5d565b5b610f19848285610873565b509392505050565b600082601f830112610f3657610f35610979565b5b8151610f46848260208601610edf565b91505092915050565b600060208284031215610f6557610f6461096f565b5b600082015167ffffffffffffffff811115610f8357610f82610974565b5b610f8f84828501610f21565b9150509291505056fe25323533437374796c652532353345253235304125323532302532353230626f6479253235324325323530412532353230253235323068746d6c25323532302532353742253235304125323532302532353230253235323025323532306f766572666c6f772532353341253235323068696464656e2532353342253235304125323532302532353230253235323025323532306d617267696e2532353341253235323030253235334225323530412532353230253235323025323532302532353230776964746825323533412532353230313030253235323525323533422532353041253235323025323532302532353230253235323068656967687425323533412532353230313030253235323525323533422532353041253235323025323532302532353744253235304125323532302532353230626f647925323532302532353742253235304125323532302532353230253235323025323532306261636b67726f756e642d636f6c6f7225323533412532353230626c61636b253235334225323530412532353230253235323025323537442532353041253235334325323532467374796c652532353345a2646970667358221220473eb1cc517b71e5e2b7a82f610e804a27ba6d70ce3eb7a0abcbe78dc8bbf3a564736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buildAnimationURI(bytes)": {
        "details": "I opted for the lazy dev approach and let scripty calculate the required buffersize      This could be calculated and passed to the contract at any point prior to its use      in `getHTMLWrappedURLSafe`",
        "params": {
          "_vars": "- Variables to be injected"
        },
        "returns": {
          "html": "- as bytes"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buildAnimationURI(bytes)": {
        "notice": "Use Scripty to generate the final html"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/PlanetsRenderer.sol:PlanetsRenderer",
        "label": "etherPlanetsScriptName",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}