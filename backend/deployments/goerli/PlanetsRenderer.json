{
  "address": "0xfF39AfacC597d42737097BCE7F10339676e6c471",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ethfsFileStorageAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_scriptyBuilderAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_scriptyStorageAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_vars",
          "type": "bytes"
        }
      ],
      "name": "buildAnimationURI",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "html",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethfsFileStorageAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scriptyBuilderAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scriptyStorageAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5371b75dd6050536657fa111ccab72a3ff5acb187519f22f6a96c4b7757cb311",
  "receipt": {
    "to": null,
    "from": "0xCC78016816633528Dd4918746D7F016563Ce27FA",
    "contractAddress": "0xfF39AfacC597d42737097BCE7F10339676e6c471",
    "transactionIndex": 53,
    "gasUsed": "923688",
    "logsBloom": "0x
    "blockHash": "0xdc08d17a69edb80db4976a8e3dbeef68998804e6d175a41742329662fd4f1239",
    "transactionHash": "0x5371b75dd6050536657fa111ccab72a3ff5acb187519f22f6a96c4b7757cb311",
    "logs": [],
    "blockNumber": 8808410,
    "cumulativeGasUsed": "7717644",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x70a78d91A434C1073D47b2deBe31C184aA8CA9Fa",
    "0xc9AB9815d4D5461F3b53Ebd857b6582E82A45C49",
    "0x730B0ADaaD15B0551928bAE7011F2C1F2A9CA20C"
  ],
  "numDeployments": 1,
  "solcInputHash": "be433a6a5652d1c8f5d18fa443d5f96e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethfsFileStorageAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_scriptyBuilderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_scriptyStorageAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vars\",\"type\":\"bytes\"}],\"name\":\"buildAnimationURI\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"html\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethfsFileStorageAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scriptyBuilderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scriptyStorageAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buildAnimationURI(bytes)\":{\"details\":\"I opted for the lazy dev approach and let scripty calculate the required buffersize      This could be calculated and passed to the contract at any point prior to its use      in `getHTMLWrappedURLSafe`\",\"params\":{\"_vars\":\"- Variables to be injected\"},\"returns\":{\"html\":\"- as bytes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buildAnimationURI(bytes)\":{\"notice\":\"Use Scripty to generate the final html\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PlanetsRenderer.sol\":\"PlanetsRenderer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PlanetsRenderer.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"./interfaces/IPlanetsRenderer.sol\\\";\\nimport \\\"./interfaces/IPlanets.sol\\\";\\n\\ncontract PlanetsRenderer is IPlanetsRenderer {\\n  address public immutable ethfsFileStorageAddress;\\n  address public immutable scriptyBuilderAddress;\\n  address public immutable scriptyStorageAddress;\\n\\n  constructor(address _ethfsFileStorageAddress, address _scriptyBuilderAddress, address _scriptyStorageAddress) {\\n    ethfsFileStorageAddress = _ethfsFileStorageAddress;\\n    scriptyBuilderAddress = _scriptyBuilderAddress;\\n    scriptyStorageAddress = _scriptyStorageAddress;\\n  }\\n\\n  /**\\n   * @notice Use Scripty to generate the final html\\n   * @dev I opted for the lazy dev approach and let scripty calculate the required buffersize\\n   *      This could be calculated and passed to the contract at any point prior to its use\\n   *      in `getHTMLWrappedURLSafe`\\n   * @param _vars - Variables to be injected\\n   * @return html - as bytes\\n   */\\n  function buildAnimationURI(bytes calldata _vars) external view returns (bytes memory html) {\\n    // To build the html I use Scripty to manage all the annoying tagging and html construction\\n    // A combination of EthFS and Scripty is used for storage and this array stores the required\\n    // code data\\n    WrappedScriptRequest[] memory requests = new WrappedScriptRequest[](5);\\n\\n    // Step 1.\\n    // - create custom content blocks that have no wrapper\\n    // - we do this to easily inject css and dom elements\\n    // - double urlencoded\\n    // - first block is css + some JS\\n    // - second block is coaster settings [biome + speed]\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L648\\n    // [double urlencoded data]\\n\\n    requests[0].wrapType = 4;\\n    requests[0]\\n      .scriptContent = \\\"%253Cstyle%253E%250A%2520%2520body%252C%250A%2520%2520html%2520%257B%250A%2520%2520%2520%2520overflow%253A%2520hidden%253B%250A%2520%2520%2520%2520margin%253A%25200%253B%250A%2520%2520%2520%2520width%253A%2520100%2525%253B%250A%2520%2520%2520%2520height%253A%2520100%2525%253B%250A%2520%2520%257D%250A%2520%2520body%2520%257B%250A%2520%2520%2520%2520background-color%253A%2520black%253B%250A%2520%2520%257D%250A%253C%252Fstyle%253E\\\";\\n\\n    // Step 2.\\n    // - wrap the JS variables in <script>\\n    // - no name is needed as we are injected the code rather than\\n    //   pulling it from a contract (scriptyStorage/EthFS)\\n    // - wrapType 1 w/ script content\\n    //\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L638\\n    // <script src=\\\"data:text/javascript;base64,[vars]\\\"></script>\\n\\n    requests[1].name = \\\"\\\";\\n    requests[1].wrapType = 1;\\n    requests[1].scriptContent = _vars;\\n\\n    // Step 3.\\n    // - pull the gzipped p5 lib from EthFS\\n    // - wrapType 2 will handle the gzip script wrappers\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L642\\n    // <script type=\\\"text/javascript+gzip\\\" src=\\\"data:text/javascript;base64,[p5-v1.5.0.min.js.gz]\\\"></script>\\n\\n    requests[2].name = \\\"p5-v1.5.0.min.js.gz\\\";\\n    requests[2].wrapType = 2;\\n    requests[2].contractAddress = ethfsFileStorageAddress;\\n\\n    // Step 4.\\n    // - pull the coaster code from scriptyStorage\\n    //   I could have stored on EthFS, but wanted to show that pulling from\\n    //   another contract is possible.\\n    // - wrapType 2 will handle the gzip script wrappers\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L642\\n    // <script type=\\\"text/javascript+gzip\\\" src=\\\"data:text/javascript;base64,[cryptoCoaster.min.js.gz]\\\"></script>\\n\\n    requests[3].name = \\\"etherplanets-v1\\\";\\n    requests[3].wrapType = 2;\\n    requests[3].contractAddress = scriptyStorageAddress;\\n\\n    // Step 4.\\n    // - pull the gunzip handler from EthFS\\n    // - wrapType 1 will handle the script tags\\n    //\\n    // Final Output:\\n    // https://github.com/intartnft/scripty.sol/blob/main/contracts/scripty/ScriptyBuilder.sol#L638\\n    // <script src=\\\"data:text/javascript;base64,[gunzipScripts-0.0.1.js]\\\"></script>\\n\\n    requests[4].name = \\\"gunzipScripts-0.0.1.js\\\";\\n    requests[4].wrapType = 1;\\n    requests[4].contractAddress = ethfsFileStorageAddress;\\n\\n    IScriptyBuilder IScriptyBuilder_ = IScriptyBuilder(scriptyBuilderAddress);\\n    uint256 bufferSize = IScriptyBuilder_.getBufferSizeForURLSafeHTMLWrapped(requests);\\n    return IScriptyBuilder_.getHTMLWrappedURLSafe(requests, bufferSize);\\n  }\\n}\\n\",\"keccak256\":\"0x7161b0516a0611abe1a2b69d2474619faa1391c6a3a9dcca0807e3babde4c038\",\"license\":\"MIT\"},\"contracts/interfaces/IPlanets.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nenum PlanetType {\\n  GAS,\\n  SOLID\\n}\\n\\nstruct Settings {\\n  uint256 seed;\\n  uint256 planetSize;\\n  bool hasRings;\\n  uint256 numMoons;\\n  PlanetType planetType;\\n  uint256 hue;\\n  bool hasWater;\\n  bytes[7] vars;\\n}\\n\",\"keccak256\":\"0xde247baaac85eaf9d393d7e8d22c19eb9eb61272cc00c9b01577b2dd97298685\",\"license\":\"MIT\"},\"contracts/interfaces/IPlanetsRenderer.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"scripty.sol/contracts/scripty/IScriptyBuilder.sol\\\";\\nimport \\\"./IPlanets.sol\\\";\\n\\ninterface IPlanetsRenderer {\\n  function buildAnimationURI(bytes calldata vars) external view returns (bytes memory html);\\n}\\n\",\"keccak256\":\"0xdfd18775cc933e1eaaa7a19572e523e680b91d4bac972eb4295b3fa7ac217138\",\"license\":\"MIT\"},\"scripty.sol/contracts/scripty/IScriptyBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\n///////////////////////////////////////////////////////////\\n// \\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2557 //\\n// \\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u255a\\u2550\\u2550\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u255a\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2554\\u255d //\\n// \\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u255a\\u2550\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u255a\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2591 //\\n// \\u2591\\u255a\\u2550\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2588\\u2588\\u2554\\u255d\\u2591\\u2591 //\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591 //\\n// \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591 //\\n///////////////////////////////////////////////////////////\\n\\n// =============================================================\\n//                            STRUCTS\\n// =============================================================\\n\\nstruct WrappedScriptRequest {\\n    string name;\\n    address contractAddress;\\n    bytes contractData;\\n    uint8 wrapType;\\n    bytes wrapPrefix;\\n    bytes wrapSuffix;\\n    bytes scriptContent;\\n}\\n\\nstruct InlineScriptRequest {\\n    string name;\\n    address contractAddress;\\n    bytes contractData;\\n    bytes scriptContent;\\n}\\n\\ninterface IScriptyBuilder {\\n\\n    // =============================================================\\n    //                            ERRORS\\n    // =============================================================\\n\\n    /**\\n     * @notice Error for, Invalid length of requests\\n     */\\n    error InvalidRequestsLength();\\n\\n    // =============================================================\\n    //                      RAW HTML GETTERS\\n    // =============================================================\\n\\n    /**\\n     * @notice Get requested scripts housed in <body> with custom wrappers\\n     * @dev Your requested scripts are returned in the following format:\\n     *      <html>\\n     *          <head></head>\\n     *          <body style='margin:0;'>\\n     *              [wrapPrefix[0]]{request[0]}[wrapSuffix[0]]\\n     *              [wrapPrefix[1]]{request[1]}[wrapSuffix[1]]\\n     *              ...\\n     *              [wrapPrefix[n]]{request[n]}[wrapSuffix[n]]\\n     *          </body>\\n     *      </html>\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full html wrapped scripts\\n     */\\n    function getHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    /**\\n     * @notice Get requested scripts housed in URL Safe wrappers\\n     * @dev Any wrapper type 0 scripts are converted to base64 and wrapped\\n     *      with <script src=\\\"data:text/javascript;base64,[SCRIPT]\\\"></script>\\n     *\\n     *      [WARNING]: Large non-base64 libraries that need base64 encoding\\n     *      carry a high risk of causing a gas out. Highly advised to use\\n     *      base64 encoded scripts where possible\\n     *\\n     *      Your requested scripts are returned in the following format:\\n     *      <html>\\n     *          <head></head>\\n     *          <body style='margin:0;'>\\n     *              [wrapPrefix[0]]{request[0]}[wrapSuffix[0]]\\n     *              [wrapPrefix[1]]{request[1]}[wrapSuffix[1]]\\n     *              ...\\n     *              [wrapPrefix[n]]{request[n]}[wrapSuffix[n]]\\n     *          </body>\\n     *      </html>\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full URL Safe wrapped scripts\\n     */\\n    function getHTMLWrappedURLSafe(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    /**\\n     * @notice Get requested scripts housed in <body> all wrapped in <script></script>\\n     * @dev Your requested scripts are returned in the following format:\\n     *      <html>\\n     *          <head></head>\\n     *          <body style='margin:0;'>\\n     *              <script>\\n     *                  {request[0]}\\n     *                  {request[1]}\\n     *                  ...\\n     *                  {request[n]}\\n     *              </script>\\n     *          </body>\\n     *      </html>\\n     * @param requests - Array of InlineScriptRequest\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full html wrapped scripts\\n     */\\n    function getHTMLInline(\\n        InlineScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    // =============================================================\\n    //                      ENCODED HTML GETTERS\\n    // =============================================================\\n\\n    /**\\n     * @notice Get {getHTMLWrapped} and base64 encode it\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full html wrapped scripts, base64 encoded\\n     */\\n    function getEncodedHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    /**\\n     * @notice Get {getHTMLInline} and base64 encode it\\n     * @param requests - Array of InlineScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return Full html wrapped scripts, base64 encoded\\n     */\\n    function getEncodedHTMLInline(\\n        InlineScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (bytes memory);\\n\\n    // =============================================================\\n    //                      STRING UTILITIES\\n    // =============================================================\\n\\n    /**\\n     * @notice Convert {getHTMLWrapped} output to a string\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return {getHTMLWrapped} as a string\\n     */\\n    function getHTMLWrappedString(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (string memory);\\n\\n    /**\\n     * @notice Convert {getHTMLInline} output to a string\\n     * @param requests - Array of InlineScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     * @return {getHTMLInline} as a string\\n     */\\n    function getHTMLInlineString(\\n        InlineScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (string memory);\\n\\n    /**\\n     * @notice Convert {getEncodedHTMLWrapped} output to a string\\n     * @param requests - Array of WrappedScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     *                     before encoding.\\n     * @return {getEncodedHTMLWrapped} as a string\\n     */\\n    function getEncodedHTMLWrappedString(\\n        WrappedScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (string memory);\\n\\n    /**\\n     * @notice Convert {getEncodedHTMLInline} output to a string\\n     * @param requests - Array of InlineScriptRequests\\n     * @param bufferSize - Total buffer size of all requested scripts\\n     *                     before encoding.\\n     * @return {getEncodedHTMLInline} as a string\\n     */\\n    function getEncodedHTMLInlineString(\\n        InlineScriptRequest[] calldata requests,\\n        uint256 bufferSize\\n    ) external view returns (string memory);\\n\\n    // =============================================================\\n    //                      OFF-CHAIN UTILITIES\\n    // =============================================================\\n\\n    /**\\n     * @notice Get the buffer size of a single inline requested code\\n     * @param request - InlineScriptRequest data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getInlineScriptSize(InlineScriptRequest memory request)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of a single wrapped requested code\\n     * @param request - WrappedScriptRequest data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getWrappedScriptSize(WrappedScriptRequest memory request)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of a single wrapped requested code\\n     * @dev If the script is of wrapper type 0, we get buffer size for\\n     *      base64 encoded version.\\n     * @param request - WrappedScriptRequest data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getURLSafeWrappedScriptSize(WrappedScriptRequest memory request)\\n    external\\n    view\\n    returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of an array of html wrapped inline scripts\\n     * @param requests - InlineScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForHTMLInline(InlineScriptRequest[] calldata requests)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of an array of html wrapped, wrapped scripts\\n     * @param requests - WrappedScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size of an array of URL safe html wrapped scripts\\n     * @param requests - WrappedScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForURLSafeHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests\\n    ) external view returns (uint256);\\n    \\n    /**\\n     * @notice Get the buffer size for encoded HTML inline scripts\\n     * @param requests - InlineScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForEncodedHTMLInline(\\n        InlineScriptRequest[] calldata requests\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @notice Get the buffer size for encoded HTML inline scripts\\n     * @param requests - InlineScriptRequests data for code\\n     * @return Buffer size as an unit256\\n     */\\n    function getBufferSizeForEncodedHTMLWrapped(\\n        WrappedScriptRequest[] calldata requests\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x2fff62123a05638ef5b190acdd1b3e76d960aa4e005cf2368f1b58052636f9c6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063a9cb35ae14610051578063bf471ba71461006f578063e3b71f871461009f578063f7da3762146100bd575b600080fd5b6100596100db565b604051610066919061078c565b60405180910390f35b61008960048036038101906100849190610820565b6100ff565b60405161009691906108fd565b60405180910390f35b6100a76106ad565b6040516100b4919061078c565b60405180910390f35b6100c56106d1565b6040516100d2919061078c565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60606000600567ffffffffffffffff81111561011e5761011d61091f565b5b60405190808252806020026020018201604052801561015757816020015b6101446106f5565b81526020019060019003908161013c5790505b5090506004816000815181106101705761016f61094e565b5b60200260200101516060019060ff16908160ff1681525050604051806101e001604052806101af8152602001610dc16101af9139816000815181106101b8576101b761094e565b5b602002602001015160c0018190525060405180602001604052806000815250816001815181106101eb576101ea61094e565b5b6020026020010151600001819052506001816001815181106102105761020f61094e565b5b60200260200101516060019060ff16908160ff168152505083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816001815181106102815761028061094e565b5b602002602001015160c001819052506040518060400160405280601381526020017f70352d76312e352e302e6d696e2e6a732e677a00000000000000000000000000815250816002815181106102da576102d961094e565b5b6020026020010151600001819052506002816002815181106102ff576102fe61094e565b5b60200260200101516060019060ff16908160ff16815250507f00000000000000000000000000000000000000000000000000000000000000008160028151811061034c5761034b61094e565b5b60200260200101516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506040518060400160405280600f81526020017f6574686572706c616e6574732d76310000000000000000000000000000000000815250816003815181106103d4576103d361094e565b5b6020026020010151600001819052506002816003815181106103f9576103f861094e565b5b60200260200101516060019060ff16908160ff16815250507f0000000000000000000000000000000000000000000000000000000000000000816003815181106104465761044561094e565b5b60200260200101516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506040518060400160405280601681526020017f67756e7a6970536372697074732d302e302e312e6a7300000000000000000000815250816004815181106104ce576104cd61094e565b5b6020026020010151600001819052506001816004815181106104f3576104f261094e565b5b60200260200101516060019060ff16908160ff16815250507f0000000000000000000000000000000000000000000000000000000000000000816004815181106105405761053f61094e565b5b60200260200101516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060007f0000000000000000000000000000000000000000000000000000000000000000905060008173ffffffffffffffffffffffffffffffffffffffff166368e1644a846040518263ffffffff1660e01b81526004016105de9190610bc1565b602060405180830381865afa1580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f9190610c19565b90508173ffffffffffffffffffffffffffffffffffffffff1663b4f7d41e84836040518363ffffffff1660e01b815260040161065c929190610c55565b600060405180830381865afa158015610679573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106a29190610d77565b935050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060e0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600060ff1681526020016060815260200160608152602001606081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107768261074b565b9050919050565b6107868161076b565b82525050565b60006020820190506107a1600083018461077d565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126107e0576107df6107bb565b5b8235905067ffffffffffffffff8111156107fd576107fc6107c0565b5b602083019150836001820283011115610819576108186107c5565b5b9250929050565b60008060208385031215610837576108366107b1565b5b600083013567ffffffffffffffff811115610855576108546107b6565b5b610861858286016107ca565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108a757808201518184015260208101905061088c565b60008484015250505050565b6000601f19601f8301169050919050565b60006108cf8261086d565b6108d98185610878565b93506108e9818560208601610889565b6108f2816108b3565b840191505092915050565b6000602082019050818103600083015261091781846108c4565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60006109d0826109a9565b6109da81856109b4565b93506109ea818560208601610889565b6109f3816108b3565b840191505092915050565b610a078161076b565b82525050565b600082825260208201905092915050565b6000610a298261086d565b610a338185610a0d565b9350610a43818560208601610889565b610a4c816108b3565b840191505092915050565b600060ff82169050919050565b610a6d81610a57565b82525050565b600060e0830160008301518482036000860152610a9082826109c5565b9150506020830151610aa560208601826109fe565b5060408301518482036040860152610abd8282610a1e565b9150506060830151610ad26060860182610a64565b5060808301518482036080860152610aea8282610a1e565b91505060a083015184820360a0860152610b048282610a1e565b91505060c083015184820360c0860152610b1e8282610a1e565b9150508091505092915050565b6000610b378383610a73565b905092915050565b6000602082019050919050565b6000610b578261097d565b610b618185610988565b935083602082028501610b7385610999565b8060005b85811015610baf5784840389528151610b908582610b2b565b9450610b9b83610b3f565b925060208a01995050600181019050610b77565b50829750879550505050505092915050565b60006020820190508181036000830152610bdb8184610b4c565b905092915050565b6000819050919050565b610bf681610be3565b8114610c0157600080fd5b50565b600081519050610c1381610bed565b92915050565b600060208284031215610c2f57610c2e6107b1565b5b6000610c3d84828501610c04565b91505092915050565b610c4f81610be3565b82525050565b60006040820190508181036000830152610c6f8185610b4c565b9050610c7e6020830184610c46565b9392505050565b600080fd5b610c93826108b3565b810181811067ffffffffffffffff82111715610cb257610cb161091f565b5b80604052505050565b6000610cc56107a7565b9050610cd18282610c8a565b919050565b600067ffffffffffffffff821115610cf157610cf061091f565b5b610cfa826108b3565b9050602081019050919050565b6000610d1a610d1584610cd6565b610cbb565b905082815260208101848484011115610d3657610d35610c85565b5b610d41848285610889565b509392505050565b600082601f830112610d5e57610d5d6107bb565b5b8151610d6e848260208601610d07565b91505092915050565b600060208284031215610d8d57610d8c6107b1565b5b600082015167ffffffffffffffff811115610dab57610daa6107b6565b5b610db784828501610d49565b9150509291505056fe25323533437374796c652532353345253235304125323532302532353230626f6479253235324325323530412532353230253235323068746d6c25323532302532353742253235304125323532302532353230253235323025323532306f766572666c6f772532353341253235323068696464656e2532353342253235304125323532302532353230253235323025323532306d617267696e2532353341253235323030253235334225323530412532353230253235323025323532302532353230776964746825323533412532353230313030253235323525323533422532353041253235323025323532302532353230253235323068656967687425323533412532353230313030253235323525323533422532353041253235323025323532302532353744253235304125323532302532353230626f647925323532302532353742253235304125323532302532353230253235323025323532306261636b67726f756e642d636f6c6f7225323533412532353230626c61636b253235334225323530412532353230253235323025323537442532353041253235334325323532467374796c652532353345a2646970667358221220a96f7d7f4d9f0083efc59ed5351d7e7deb703911ecce5b3b1750aa4d3ba4201f64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buildAnimationURI(bytes)": {
        "details": "I opted for the lazy dev approach and let scripty calculate the required buffersize      This could be calculated and passed to the contract at any point prior to its use      in `getHTMLWrappedURLSafe`",
        "params": {
          "_vars": "- Variables to be injected"
        },
        "returns": {
          "html": "- as bytes"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buildAnimationURI(bytes)": {
        "notice": "Use Scripty to generate the final html"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}